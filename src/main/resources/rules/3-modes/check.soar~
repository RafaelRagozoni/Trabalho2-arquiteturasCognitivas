
sp {clone-creature
   (state <s> ^name 3-modes
              ^io.input-link.CREATURE <c>)
-->
   (<s> ^CREATURE (deep-copy <c>))}
               
sp {elaborate*state*name
   (state <s> ^superstate.operator.name <name>)
-->
   (<s> ^name <name>)
}

sp {elaborate*state*top-state
   (state <s> ^superstate.top-state <ts>)
-->
   (<s> ^top-state <ts>)
}

sp {elaborate*top-state*top-state
   (state <s> ^superstate nil)
-->
   (<s> ^top-state <s>)
}

sp {propose*eat-mode
   (state <s> ^attribute state
              ^impasse no-change                           
              ^superstate <ss>)
   (<ss> ^io.input-link <il>)
   (<ss> ^superstate nil)
   (<ss> ^CREATURE <creature>)
   (<creature> ^SENSOR.VISUAL <visual>
               ^PARAMETERS.MINFUEL <MINFUEL>)
   (<creature> ^SENSOR.FUEL.VALUE <FUEL> < <MINFUEL>)
-->
   (<ss> ^operator <o> +)
   (<o> ^name eat-mode)}

sp {eat-mode*propose*eat-it
   (state <s> ^name eat-mode
              ^superstate <ss>)
   (<ss> ^io.input-link <il>
         ^name 3-modes
         ^CREATURE.MEMORY.ENTITY <ENTITY>)
   (<ENTITY> ^TYPE FOOD
             ^NAME <foodName>
             ^DISTANCE <distance> < 30)
-->
   (<s> ^operator <op> + =)
   (<op> ^name eat-it
         ^FOODNAME <foodName>)
}
##################################################################
sp {eat-mode*apply*eat-it
   (state <s> ^name eat-mode
              ^superstate <ss>
              ^operator <o>)
   (<ss> ^io.output-link <ol>
         ^name 3-modes
         ^CREATURE <creature>)
   (<creature> ^MEMORY <memory>
               ^SENSOR <sensor>)
   (<sensor> ^FUEL <fuel>
             ^VISUAL <visual>)
   (<visual> ^ENTITY <visualEntity>)
   (<fuel> ^VALUE <fuelValue>)
   (<memory> ^ENTITY <ENTITY>)
   (<o> ^name eat-it
        ^FOODNAME <foodName>)
   (<ENTITY> ^NAME <foodName>)
   (<visualEntity> ^NAME <foodName>)
-->
   (<ol> ^EAT <command>)
   (<command> ^Name <foodName>)
   (<fuel> ^VALUE <fuelValue> -
           ^VALUE (+ <fuelValue> 500))
   (<memory> ^ENTITY <ENTITY> -)
   (<visual> ^ENTITY <visualEntity> -)}
   # Propose*move*food:
sp {propose*move*food
   (state <s> ^name eat-mode
              ^superstate <ss>)
   (<ss> ^io.input-link <il>
         ^name 3-modes
         ^CREATURE <CREATURE>)
   (<CREATURE> ^POSITION <position>
               ^MEMORY.ENTITY <ENTITY>)
   (<position> ^X <creatureX>
               ^Y <creatureY>)                
   (<ENTITY> ^TYPE FOOD
             ^NAME <foodName>
             ^X <X>
             ^Y <Y>)
   (<ENTITY> ^DISTANCE <distance> > 30)
-->
   (<s> ^operator <op> + =)
   (<op> ^name move-food
         ^FOOD_NAME <foodName>
         ^FOOD_X <X>
         ^FOOD_Y <Y>
         ^DISTANCE <distance>)
}
# Apply*move*food:
# If the move operator is selected, then generate an output command to it 
sp {apply*move*food
   (state <s> ^name eat-mode
              ^operator <o>
              ^superstate <ss>)
   (<ss> ^name 3-modes
         ^io <io>)
   (<io> ^input-link <il>)             
   (<io> ^output-link <ol>)
   (<o> ^name move-food
        ^FOOD_X <x>
        ^FOOD_Y <y>
        ^FOOD_NAME <foodName>
        ^DISTANCE <distance>)
   (<ss> ^CREATURE <creature>)
   (<creature> ^MEMORY <memory>
               ^POSITION <position>)
   (<position> ^X <creatureX>
               ^Y <creatureY>)
   (<memory> ^ENTITY <entityInMemory>)
   (<entityInMemory> ^NAME <foodName>)
-->
   (<ol> ^MOVE <command>)
   (<command> ^Vel 1)
   (<command> ^VelR 1)
   (<command> ^VelL 1)
   (<command> ^X <x>)
   (<command> ^Y <y>)
   (<position> ^X <creatureX> -
               ^Y <creatureY> -
               ^X <x>
               ^Y <y>)
   (<creature> ^MEMORY <memory> -)
   (<creature> ^MEMORY <newMemory>)
#   (<entityInMemory> ^DISTANCE 0)

   #(halt)
}

sp {propose*greed-mode
   (state <s> ^attribute state
              ^impasse no-change                           
              ^superstate <ss>)
   (<ss> ^io.input-link <il>)
   (<ss> ^superstate nil)
   (<ss> ^CREATURE <creature>)
   (<creature> ^SENSOR.VISUAL <visual>
               ^PARAMETERS.MINFUEL <MINFUEL>)
   (<creature> ^SENSOR.FUEL.VALUE <FUEL> > <MINFUEL>)
   (<visual> ^ENTITY <entity>)
-->
   (<ss> ^operator <o> + =)
   (<o> ^name greed-mode)}

   sp {greed-mode*propose*colect-it
   (state <s> ^name greed-mode
              ^superstate <ss>)
   (<ss> ^io.input-link <il>
         ^name 3-modes)
   (<ss> ^CREATURE.MEMORY.ENTITY <ENTITY>)
   (<ENTITY> ^TYPE JEWEL
             ^NAME <jewelName>
             ^DISTANCE <distance> < 30)
-->
   (<s> ^operator <op> +)
   (<op> ^name colect-it
         ^JEWELNAME <jewelName>)
}
##################################################################
sp {greed-mode*apply*colect-it
   (state <s> ^name greed-mode
              ^superstate <ss>
              ^operator <o>)
   (<ss> ^io.output-link <ol>
         ^name 3-modes
         ^CREATURE <creature>)
   (<creature> ^MEMORY <memory>
               ^SENSOR <sensor>)
   (<sensor> ^VISUAL <visual>)
   (<visual> ^ENTITY <visualEntity>)
   (<memory> ^ENTITY <ENTITY>)
   (<o> ^name colect-it
        ^JEWELNAME <jewelName>)
   (<ENTITY> ^NAME <jewelName>)
   (<visualEntity> ^NAME <jewelName>)
-->
   (<ol> ^GET <command>)
   (<command> ^Name <jewelName>)
   (<memory> ^ENTITY <ENTITY> -)
   (<visual> ^ENTITY <visualEntity> -)}


   # Propose*move*food:
sp {propose*move*jewel
   (state <s> ^name greed-mode
              ^superstate <ss>)
   (<ss> ^io.input-link <il>
         ^name 3-modes
         ^CREATURE <CREATURE>)
   (<CREATURE> ^POSITION <position>
               ^MEMORY.ENTITY <ENTITY>)
   (<position> ^X <creatureX>
               ^Y <creatureY>)                
   (<ENTITY> ^TYPE JEWEL
             ^NAME <jewelName>
             ^X <X>
             ^Y <Y>)
  (<ENTITY> ^DISTANCE <distance> > 30)
-->
   (<s> ^operator <op> + =)
   (<op> ^name move-jewel
         ^FOOD_NAME <jewelName>
         ^FOOD_X <X>
         ^FOOD_Y <Y>
         ^DISTANCE <distance>)
}
# Apply*move*food:
# If the move operator is selected, then generate an output command to it 
sp {apply*move*jewel
   (state <s> ^name greed-mode
              ^operator <o>
              ^superstate <ss>)
   (<ss> ^name 3-modes
         ^io <io>)
   (<io> ^input-link <il>)             
   (<io> ^output-link <ol>)
   (<o> ^name move-jewel
        ^FOOD_X <x>
        ^FOOD_Y <y>
        ^FOOD_NAME <jewelName>
        ^DISTANCE <distance>)
   (<ss> ^CREATURE <creature>)
   (<creature> ^MEMORY <memory>
               ^POSITION <position>)
   (<position> ^X <creatureX>
               ^Y <creatureY>)
   (<memory> ^ENTITY <entityInMemory>)
   (<entityInMemory> ^NAME <jewelName>)
-->
   (<ol> ^MOVE <command>)
   (<command> ^Vel 1)
   (<command> ^VelR 1)
   (<command> ^VelL 1)
   (<command> ^X <x>)
   (<command> ^Y <y>)
   (<position> ^X <creatureX> -
               ^Y <creatureY> -
               ^X <x>
               ^Y <y>)
   (<creature> ^MEMORY <memory> -)
   (<creature> ^MEMORY <newMemory>)
#   (<entityInMemory> ^DISTANCE 0)

   #(halt)
}

sp {propose*initialize-3-modes
   (state <s> ^superstate nil
             -^name)
-->
   (<s> ^operator <o> +)
   (<o> ^name initialize-3-modes)
}

sp {apply*initialize-3-modes
   (state <s> ^operator <op>)
   (<op> ^name initialize-3-modes)
-->
   (<s> ^name 3-modes)
}

# Propose*see*entity*without*memory*count:
sp {propose*see*entity*without*memory*count
   #   (state <s> ^superstate <ss>)
   (state <s> ^io.input-link <il>
         ^name 3-modes)
   (<s> ^CREATURE <creature>)
   (<creature> ^SENSOR.VISUAL.ENTITY <entity>
               ^POSITION <position>)
   (<position> ^X <creatureX>
               ^Y <creatureY>)
   (<entity> ^TYPE <type> << JEWEL FOOD >>)
   (<entity> ^X <x>)
   (<entity> ^Y <y>) 
   (<entity> ^NAME <name>)
   (<entity> ^COLOR <color>)
   (<creature> ^MEMORY <memory>)   
   -(<memory> ^ENTITY.NAME <name>)
-->
   (<s> ^operator <o> + =)
   (<o> ^name seeEntityWithoutMemoryCount)
   (<o> ^parameterEntity <newEntity>)
   (<newEntity> ^Name <name>)
   (<newEntity> ^Type <type>)
   (<newEntity> ^X <x>)
   (<newEntity> ^Y <y>)
   (<newEntity> ^Color <color>)
   (<newEntity> ^DISTANCE (sqrt (+ (* (- <creatureX> <x>) (- <creatureX> <x>)) (* (- <creatureY> <y>) (- <creatureY> <y>)))))}
  
# Apply*see*entity*without*memory*count:
# If the see operator is selected, then generate an output command to it 
sp {apply*see*entity*without*memory*count
   (state <ss> ^operator <o>)
   (<ss> ^io <io>
         ^name 3-modes)
   (<io> ^input-link <il>)
   (<io> ^output-link <ol>)
   (<ss> ^CREATURE <creature>)
   (<creature> ^MEMORY <memory>)  
   (<o> ^name seeEntityWithoutMemoryCount)
   (<o> ^parameterEntity <newEntity>)
   (<newEntity> ^X <x>)
   (<newEntity> ^Y <y>)
   (<newEntity> ^Name <name>)
   (<newEntity> ^Type <type>)
   (<newEntity> ^Color <color>)
   (<newEntity> ^DISTANCE <distance>)
-->
   (<memory> ^ENTITY <memoryEntity>)
   (<memoryEntity> ^X <x>)
   (<memoryEntity> ^Y <y>)
   (<memoryEntity> ^NAME <name>)
   (<memoryEntity> ^TYPE <type>)
   (<memoryEntity> ^COLOR <color>)
   (<memoryEntity> ^DISTANCE <distance>)}
 
sp {eat-mode*seeEntityWithoutMemoryCount*preferences
(state <s> ^operator <o> + 
                     <o2> +)
(<o> ^name seeEntityWithoutMemoryCount)
(<o2> ^name eat-mode)
-->
(<s> ^operator <o> > <o2>)}

sp {propose*wander
   (state <s> ^attribute state
              ^impasse no-change                           
              ^superstate <ss>)
   (<ss> ^io.input-link <il>)
   (<ss> ^superstate nil)
   (<ss> ^CREATURE <creature>)
   (<creature> ^SENSOR.VISUAL <visual>)
   -(<visual> ^ENTITY <entity>)
-->
   (<ss> ^operator <o> + = )
   (<o> ^name wander)}
   
# Apply*wander:
# If the wander operator is selected, then generate an output command to it 
sp {apply*wander
   (state <s> ^operator <o>
              ^io <io>)
   (<io> ^output-link <ol>)
   (<o> ^name wander)
-->
   (<ol> ^MOVE <command>)
   (<command> ^Vel 0)
   (<command> ^VelR 2)
   (<command> ^VelL 0)
   (interrupt)
}


sp {greed-mode*seeEntityWithoutMemoryCount*preferences
(state <s> ^operator <o> + 
                     <o2> +)
(<o> ^name seeEntityWithoutMemoryCount)
(<o2> ^name greed-mode)
-->
(<s> ^operator <o> > <o2>)}

sp {move-food*distance*preferences
(state <s> ^operator <o> + 
                     <o2> +)
(<o> ^name move-food
     ^DISTANCE <d1>)
(<o2> ^name move-food
      ^DISTANCE <d2>)
-->
(<s> ^operator <o> > <o2>)}